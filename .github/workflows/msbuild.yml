name: Build Unreal Engine 5 Project
on:
  workflow_dispatch:
    inputs:
      platforms:
        description: 'Platforms to build for'
        required: true
        default: 'Windows,Linux,Mac'
        type: choice
        options:
          - 'Windows,Linux,Mac'
          - 'Windows'
          - 'Linux'
          - 'Mac'
          - 'Windows,Linux'
          - 'Windows,Mac'
          - 'Linux,Mac'
      configuration:
        description: 'Build configuration'
        required: true
        default: 'Development'
        type: choice
        options:
          - 'Development'
          - 'Shipping'
          - 'DebugGame'

jobs:
  build-windows:
    runs-on: self-hosted
    if: contains(github.event.inputs.platforms, 'Windows')
    env:
      UE_PROJECT_PATH: ${{ secrets.UE_PROJECT_PATH }}
      BUILD_OUTPUT_PATH: ${{ github.workspace }}/build-output-windows
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
          
      # Setup MSBuild
      - name: Setup MSBuild path
        uses: microsoft/setup-msbuild@v1.0.2
        
      # Build Unreal Project for Windows
      - name: Build UE5 Project for Windows
        run: |
          & "C:\Program Files\Epic Games\UE_5.5\Engine\Build\BatchFiles\RunUAT.bat" BuildCookRun `
            -project="$env:UE_PROJECT_PATH" `
            -noP4 -platform=Win64 -clientconfig=${{ github.event.inputs.configuration }} `
            -serverconfig=${{ github.event.inputs.configuration }} -cook -build -stage -pak `
            -archive -archivedirectory="$env:BUILD_OUTPUT_PATH"
        shell: powershell
        
      # Upload the build as an artifact
      - name: Upload Windows Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ github.event.inputs.configuration }}-build
          path: ${{ env.BUILD_OUTPUT_PATH }}
          retention-days: 7

  build-linux:
    runs-on: self-hosted
    if: contains(github.event.inputs.platforms, 'Linux')
    env:
      UE_PROJECT_PATH: ${{ secrets.UE_PROJECT_PATH }}
      BUILD_OUTPUT_PATH: ${{ github.workspace }}/build-output-linux
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
          
      # Setup MSBuild (may be needed for some UE dependencies)
      - name: Setup MSBuild path
        uses: microsoft/setup-msbuild@v1.0.2
        
      # Build Unreal Project for Linux
      - name: Build UE5 Project for Linux
        run: |
          # More explicit Linux build command with enhanced parameters
          & "C:\Program Files\Epic Games\UE_5.5\Engine\Build\BatchFiles\RunUAT.bat" BuildCookRun `
            -project="$env:UE_PROJECT_PATH" `
            -noP4 `
            -clientconfig=${{ github.event.inputs.configuration }} `
            -TargetPlatform=Linux `
            -cook -build -stage -pak -skipstage `
            -archive -archivedirectory="$env:BUILD_OUTPUT_PATH" `
            -nodebuginfo
        shell: powershell
        continue-on-error: true  # Allow job to continue even if this step fails
        
      # Check build result
      - name: Check Linux Build Result
        id: check_build
        run: |
          if (Test-Path -Path "$env:BUILD_OUTPUT_PATH\Linux") {
            Write-Host "::notice::Linux build succeeded."
            echo "build_success=true" >> $env:GITHUB_OUTPUT
          } else {
            Write-Host "::warning::Linux build may have failed. Checking for common issues..."
            echo "build_success=false" >> $env:GITHUB_OUTPUT
          }
        shell: powershell
        
      # Troubleshooting step
      - name: Troubleshoot Linux Build
        if: steps.check_build.outputs.build_success != 'true'
        run: |
          Write-Host "Checking Linux toolchain installation..."
          
          # Check Linux cross-compilation tools
          $toolchainPaths = @(
            "C:\Program Files\Epic Games\UE_5.5\Engine\Extras\ThirdPartyNotUE\SDKs\HostLinux\Linux_x64",
            "C:\Program Files\Epic Games\UE_5.5\Engine\Source\ThirdParty\Linux"
          )
          
          foreach ($path in $toolchainPaths) {
            if (Test-Path -Path $path) {
              Write-Host "Found Linux support files at: $path"
            } else {
              Write-Host "::warning::Missing Linux support files at: $path"
            }
          }
          
          # Try alternate build command
          Write-Host "Attempting alternate Linux build command..."
          & "C:\Program Files\Epic Games\UE_5.5\Engine\Build\BatchFiles\RunUAT.bat" BuildCookRun `
            -project="$env:UE_PROJECT_PATH" `
            -noP4 `
            -clientconfig=${{ github.event.inputs.configuration }} `
            -TargetPlatform=Linux `
            -utf8output `
            -cook -build -stage -pak `
            -archive -archivedirectory="$env:BUILD_OUTPUT_PATH\Attempt2" `
            -CookAll
        shell: powershell
        continue-on-error: true
      
      # Upload Linux build artifact if successful
      - name: Upload Linux Build Artifact
        uses: actions/upload-artifact@v4
        if: steps.check_build.outputs.build_success == 'true'
        with:
          name: linux-${{ github.event.inputs.configuration }}-build
          path: ${{ env.BUILD_OUTPUT_PATH }}
          retention-days: 7

  build-mac:
    runs-on: self-hosted
    if: contains(github.event.inputs.platforms, 'Mac')
    env:
      UE_PROJECT_PATH: ${{ secrets.UE_PROJECT_PATH }}
      BUILD_OUTPUT_PATH: ${{ github.workspace }}/build-output-mac
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true
          
      # Setup MSBuild (may be needed for some UE dependencies)
      - name: Setup MSBuild path
        uses: microsoft/setup-msbuild@v1.0.2
        
      # Build Unreal Project for Mac
      - name: Build UE5 Project for Mac
        run: |
          # More explicit macOS build command with enhanced parameters
          & "C:\Program Files\Epic Games\UE_5.5\Engine\Build\BatchFiles\RunUAT.bat" BuildCookRun `
            -project="$env:UE_PROJECT_PATH" `
            -noP4 `
            -clientconfig=${{ github.event.inputs.configuration }} `
            -TargetPlatform=Mac `
            -cook -build -stage -pak -skipstage `
            -archive -archivedirectory="$env:BUILD_OUTPUT_PATH" `
            -nodebuginfo
        shell: powershell
        continue-on-error: true  # Allow job to continue even if this step fails
        
      # Check build result
      - name: Check Mac Build Result
        id: check_mac_build
        run: |
          if (Test-Path -Path "$env:BUILD_OUTPUT_PATH\Mac") {
            Write-Host "::notice::Mac build succeeded."
            echo "build_success=true" >> $env:GITHUB_OUTPUT
          } else {
            Write-Host "::warning::Mac build may have failed. Checking for common issues..."
            echo "build_success=false" >> $env:GITHUB_OUTPUT
          }
        shell: powershell
        
      # Troubleshooting step
      - name: Troubleshoot Mac Build
        if: steps.check_mac_build.outputs.build_success != 'true'
        run: |
          Write-Host "Checking Mac toolchain installation..."
          
          # Check Mac cross-compilation tools
          $toolchainPaths = @(
            "C:\Program Files\Epic Games\UE_5.5\Engine\Extras\ThirdPartyNotUE\SDKs\HostMac",
            "C:\Program Files\Epic Games\UE_5.5\Engine\Source\ThirdParty\Mac"
          )
          
          foreach ($path in $toolchainPaths) {
            if (Test-Path -Path $path) {
              Write-Host "Found Mac support files at: $path"
            } else {
              Write-Host "::warning::Missing Mac support files at: $path"
            }
          }
          
          # Try alternate build command
          Write-Host "Attempting alternate Mac build command..."
          & "C:\Program Files\Epic Games\UE_5.5\Engine\Build\BatchFiles\RunUAT.bat" BuildCookRun `
            -project="$env:UE_PROJECT_PATH" `
            -noP4 `
            -clientconfig=${{ github.event.inputs.configuration }} `
            -TargetPlatform=Mac `
            -utf8output `
            -cook -build -stage -pak `
            -archive -archivedirectory="$env:BUILD_OUTPUT_PATH\Attempt2" `
            -CookAll
        shell: powershell
        continue-on-error: true
      
      # Upload Mac build artifact if successful
      - name: Upload Mac Build Artifact
        uses: actions/upload-artifact@v4
        if: steps.check_mac_build.outputs.build_success == 'true'
        with:
          name: mac-${{ github.event.inputs.configuration }}-build
          path: ${{ env.BUILD_OUTPUT_PATH }}
          retention-days: 7
